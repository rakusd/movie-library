prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix db: <http://dbpedia.org/>
prefix lmdb: <http://data.linkedmdb.org/resource/movie/>
prefix purl: <http://purl.org/dc/terms/>
prefix owl: <http://www.w3.org/2002/07/owl#>

SELECT ?movies
WHERE {
  ?movie a lmdb:film ;
         purl:title ?title ;
         lmdb:initial_release_date ?release_date .
    
  FILTER (CONTAINS(LCASE(?title), LCASE('Age')))
  FILTER (STRSTARTS(?release_date, '2002')) 
}
LIMIT 10 OFFSET 0



PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX http: <http://www.w3.org/2011/http#>
PREFIX fo: <http://www.w3.org/1999/XSL/Format#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix foaf: <http://xmlns.com/foaf/0.1/>prefix db: <http://dbpedia.org/>prefix db-ont: <http://dbpedia.org/ontology/>aprefix db-prop: <http://dbpedia.org/property/>aprefix lmdb: <http://data.linkedmdb.org/resource/movie/>\nprefix purl: <http://purl.org/dc/terms/>\nprefix owl: <http://www.w3.org/2002/07/owl#>\n\nSELECT *\nWHERE {\t\n   \n   VALUES (?movie) { (<http://data.linkedmdb.org/resource/film/1>) (<http://data.linkedmdb.org/resource/film/4>) (<http://data.linkedmdb.org/resource/film/11>) (<http://data.linkedmdb.org/resource/film/17>) (<http://data.linkedmdb.org/resource/film/19>) (<http://data.linkedmdb.org/resource/film/21>) (<http://data.linkedmdb.org/resource/film/22>) (<http://data.linkedmdb.org/resource/film/23>) (<http://data.linkedmdb.org/resource/film/31>) (<http://data.linkedmdb.org/resource/film/32>) (<http://data.linkedmdb.org/resource/film/38>) (<http://data.linkedmdb.org/resource/film/39>) (<http://data.linkedmdb.org/resource/film/41>) (<http://data.linkedmdb.org/resource/film/42>) (<http://data.linkedmdb.org/resource/film/45>) (<http://data.linkedmdb.org/resource/film/46>) (<http://data.linkedmdb.org/resource/film/47>) (<http://data.linkedmdb.org/resource/film/48>) (<http://data.linkedmdb.org/resource/film/52>) (<http://data.linkedmdb.org/resource/film/53>) }\n   ?movie lmdb:actor ?actor ;\n       purl:title ?title ;\n       lmdb:initial_release_date ?release_date .\n  ?actor lmdb:actor_name ?actor_name .\n  \n  OPTIONAL { \n  \t?actor owl:sameAs ?dbpedia_ref . \n   \tFILTER( STRSTARTS(STR(?dbpedia_ref), \'http://dbpedia.org/\'))\n  }\n  \n  SERVICE <http://dbpedia.org/sparql/> {\n      ?dbpedia_ref db-ont:wikiPageID ?xd .\n      OPTIONAL {\n        ?dbpedia_ref rdfs:comment ?actor_description .\n        FILTER(LANG(?actor_description) = "en")\n      }\n    \n      OPTIONAL {\n        ?dbpedia_ref db-prop:birthDate ?actor_birth_date .\n      }\n      \n      OPTIONAL {\n        ?dbpedia_ref db-prop:birthPlace ?actor_birth_place .\n        FILTER(LANG(?actor_birth_place) = "en")\n      }\n   }\n}\n'